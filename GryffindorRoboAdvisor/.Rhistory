shiny::runApp()
?numericInput
runApp()
runApp()
runApp()
?radioButtons
runApp()
?sliderInput
runApp()
runApp()
runApp()
runApp()
?radioButtons
runApp()
runApp()
runApp()
runApp()
runApp()
library(quantmod)
library(rvest)
library(scales)
sp500 <- read_html("https://en.wikipedia.org/wiki/List_of_S%26P_500_companies")
View(sp500)
sp500 <- read_html("https://de.investing.com/indices/stoxx-600-components")
sp500 <- read_html("https://de.investing.com/indices/stoxx-600-components")
sp500 %>%
html_nodes(".text") %>%
html_text() -> ticker_sp500
var program = require('commander');
var commodities = require('./investing-commodities');
// ================= parse program arguments
program.version('0.0.1')
.option('-c --country [UK|US]', 'list only commodities from the given country')
.option('-r --regex [search]', 'find commodities with names matching regex. Example: ca, \d, "[cad]a"')
.parse(process.argv);
var cm = commodities.commodities;
if (program.country) {
if (program.country.toUpperCase() === 'US') {
cm = commodities.usOnly();
} else if (program.country.toUpperCase() === 'UK') {
cm = commodities.ukOnly();
} else {
console.error('unknown country', program.country);
process.exit(1);
}
}
if (program.regex) {
cm = commodities.find(new RegExp(program.regex, "i"));
if (cm.length === 0) {
console.error('no commodity matching', program.regex);
process.exit(0);
}
}
npm install
shiny::runApp()
install.packages("shinydashboard")
runApp()
runApp()
runApp()
install.packages("shiny")
install.packages("shiny")
shiny::runApp()
shiny::runApp()
